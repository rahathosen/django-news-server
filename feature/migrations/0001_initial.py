# Generated by Django 4.2.6 on 2023-10-22 17:48

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('article', '0001_initial'),
        ('reporter', '0001_initial'),
        ('categories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueId', models.CharField(max_length=20, unique=True, verbose_name='Feature Name in English without Space')),
                ('title', models.CharField(max_length=50, verbose_name='Feature Title')),
                ('sortDetails', models.CharField(blank=True, max_length=200, null=True)),
                ('details', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='News/Categories/Feature/')),
                ('serial', models.PositiveIntegerField(blank=True, default=0)),
                ('total_view', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Feature',
                'verbose_name_plural': 'Features',
                'ordering': ['serial'],
            },
        ),
        migrations.CreateModel(
            name='FeatureCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueId', models.CharField(max_length=20, unique=True, verbose_name='Category Name in English without Space')),
                ('title', models.CharField(max_length=50, verbose_name='Feature Category Title')),
                ('sortDetails', models.CharField(blank=True, max_length=200, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='News/Categories/Feature/')),
                ('serial', models.PositiveIntegerField(blank=True, default=0)),
                ('total_view', models.PositiveIntegerField(default=0)),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='feature.feature', to_field='uniqueId', verbose_name='Feature')),
            ],
            options={
                'verbose_name': 'Feature Category',
                'verbose_name_plural': 'Feature Categories',
                'ordering': ['serial'],
            },
        ),
        migrations.CreateModel(
            name='FeaturePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueId', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('details', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Details')),
                ('image', models.ImageField(blank=True, max_length=500, null=True, upload_to='Post/images/webp', verbose_name='Image')),
                ('imageSource', models.CharField(blank=True, max_length=100, null=True, verbose_name='Image Source')),
                ('videoLink', models.CharField(blank=True, max_length=200, null=True, verbose_name='Video Link')),
                ('videoSource', models.CharField(blank=True, max_length=100, null=True, verbose_name='Video Source')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Publish')], default=0, verbose_name='Status')),
                ('editor_reviewed', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')], default=0, verbose_name='Editor Reviewed')),
                ('total_view', models.PositiveIntegerField(default=0, verbose_name='Total View(*Do not edit)')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='feature.featurecategory', to_field='uniqueId', verbose_name='Feature Category')),
                ('city_corporation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='categories.citycorporation', to_field='uniqueId', verbose_name='City Corporation')),
                ('continent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='categories.continent', to_field='uniqueId', verbose_name='Continent')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='categories.country', to_field='uniqueId', verbose_name='Country')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='categories.district', to_field='uniqueId', verbose_name='District')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='categories.division', to_field='uniqueId', verbose_name='Division')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='feature.feature', to_field='uniqueId', verbose_name='Feature')),
                ('pourosava', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='categories.pourosava', to_field='uniqueId', verbose_name='Pourosava')),
                ('related_post', models.ManyToManyField(blank=True, to='feature.featurepost', verbose_name='Related Post Suggation')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='reporter.reporter', to_field='uniqueId', verbose_name='Reporter')),
                ('tag', models.ManyToManyField(blank=True, to='categories.poststag', verbose_name='Tags')),
                ('thana', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='categories.thana', to_field='uniqueId', verbose_name='Thana')),
                ('turisum_spot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='categories.turisumspot', to_field='uniqueId', verbose_name='Turisum Spot')),
                ('union', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='categories.union', to_field='uniqueId', verbose_name='Union')),
                ('upozila', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='categories.upozila', verbose_name='Upozila')),
                ('written_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='article.articlewritter', to_field='uniqueId', verbose_name='Written By')),
                ('zip_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='categories.zippostalcode', to_field='uniqueId', verbose_name='Zip Code')),
            ],
            options={
                'verbose_name': 'Feature Post',
                'verbose_name_plural': 'Feature Posts',
                'ordering': ['-created_at'],
            },
        ),
    ]
